---
- name: Get ESX nodes information
  hosts: esx_hosts
  gather_facts: True
  tasks:
    - name: Get SHA-256 SSL thumbprint
      command: openssl x509 -in /etc/vmware/ssl/rui.crt -fingerprint -sha256 -noout
      when:
        - ansible_distribution == "VMkernel"
      register: thumb
    - name: Set ssl thumbprint fact
      set_fact:
        sslthumb: "{{ thumb.stdout|regex_findall('Fingerprint=(.*)') }}"
      when:
        - ansible_distribution == "VMkernel"

- hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
    - vars.yml
  tasks:

###############################################################################
# Edge cluster
###############################################################################
    - name: Define edge cluster members
      set_fact:
        edge_members: "{{edge_members|default([]) + [ { 'transport_node_name': hostvars[item].transport_node_name } ] }}"
      with_items:
        - "{{groups['edge_nodes']}}"

    - name: NSX-T Edge Cluster
      nsxt_edge_clusters:
        hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
        username: "{{hostvars['localhost'].nsx_manager_username}}"
        password: "{{hostvars['localhost'].nsx_manager_password}}"
        display_name: "{{ edge_cluster_name }}"
        validate_certs: False
        members: "{{ edge_members }}"
        state: present
      register: edge_cluster

###############################################################################
# Configure compute clusters for auto NSX install
###############################################################################
    - name: Enable auto install of NSX for specified clusters
      nsxt_compute_collection_fabric_templates:
        hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
        username: "{{hostvars['localhost'].nsx_manager_username}}"
        password: "{{hostvars['localhost'].nsx_manager_password}}"
        validate_certs: False
        display_name: "{{item}}-fabric_template"
        compute_manager_name: "{{compute_manager_name}}"
        cluster_name: "{{item}}"
        auto_install_nsx: True
        state: present
      with_items:
        - "{{hostvars['localhost'].clusters_to_install_nsx}}"
      register: auto_install_nsx_result
      when:
        - hostvars['localhost'].clusters_to_install_nsx is defined

    - name: Create uplink profiles for the clusters to be auto installed
      nsxt_uplink_profiles:
        hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
        username: "{{hostvars['localhost'].nsx_manager_username}}"
        password: "{{hostvars['localhost'].nsx_manager_password}}"
        validate_certs: False
        resource_type: UplinkHostSwitchProfile
        display_name: "{{item.0}}-profile"
        mtu: 1600
        teaming: "{{common_teaming_spec_for_esx}}"
        transport_vlan: "{{item.1}}"
        state: "present"
      with_together:
        - "{{hostvars['localhost'].clusters_to_install_nsx}}"
        - "{{hostvars['localhost'].per_cluster_vlans}}"
      when:
        - hostvars['localhost'].clusters_to_install_nsx is defined
        - hostvars['localhost'].per_cluster_vlans is defined
        - auto_install_nsx_result.changed == true

    - name: Enable auto creation of transport nodes for specified clusters
      nsxt_compute_collection_transport_templates:
        hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
        username: "{{hostvars['localhost'].nsx_manager_username}}"
        password: "{{hostvars['localhost'].nsx_manager_password}}"
        validate_certs: False
        display_name: "{{item}}-transport_template"
        compute_collections:
        - compute_manager_name: "{{compute_manager_name}}"
          cluster_name: "{{item}}"
        host_switch_spec:
          resource_type: StandardHostSwitchSpec
          host_switches:
          - host_switch_profiles:
            - name: "{{item}}-profile"
              type: UplinkHostSwitchProfile
            host_switch_name: "{{overlay_host_switch}}"
            pnics: "{{pnic_list}}"
            ip_assignment_spec:
              resource_type: StaticIpPoolSpec
              ip_pool_name: "{{vtep_ip_pool_name}}"
        transport_zone_endpoints:
        - transport_zone_name: "{{overlay_transport_zone}}"
        state: present
      with_items:
        - "{{hostvars['localhost'].clusters_to_install_nsx}}"
      when:
        - hostvars['localhost'].clusters_to_install_nsx is defined
        - hostvars['localhost'].per_cluster_vlans is defined
        - auto_install_nsx_result.changed == true